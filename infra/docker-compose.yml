version: '3.8'

services:
  web:
    build:
      context: ..
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ../:/app
    env_file:
      - ../.env
    depends_on:
      - db
      - redis

  db:
    image: postgres:14
    container_name: chat_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  memcached:
    image: memcached:alpine
    ports:
      - "11211:11211"

  redis:
    image: redis:7
    container_name: redis-server
    ports:
      - "6379:6379"
    command: redis-server --requirepass supersecreta123
    volumes:
      - redis_data:/data

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redis_admin
    ports:
      - "8004:8004"
    restart: always

volumes:
  postgres_data:
  redis_data:
